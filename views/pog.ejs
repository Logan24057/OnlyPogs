<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="style.css">
  <title>OnlyPogs: <%= pog.name %></title>
</head>

<body>
  <h1>
    <%= pog.name %>
  </h1>

  <div class="center">
    <button id="editButton" onclick="Edit()">Edit </button>
    <button id="cancelButton" onclick="Cancel()" style="display: none;">Cancel</button>
    <!--Created the image of the pog on the pog page-->
    <a id="img" href="/"><img src="/pogs/<%=pog.name%>.png" alt="/pogs/<%=pog.name%>.png" width="200px" height="auto"
        id="pogPNG" onerror="this.src ='/pogs/<%=pog.name%>.png'; unknown(); this.onerror = ' '; "></a>

    <div id="infoBoxes">

      <!--Dropdown menu that displays the available colors of the currently selected pog-->
      <div class="infobox">
        <p class="infoheader"><label>Colors</label></p>
        <select id="Pogs" onchange="pogChange()" class="info">
          <%for (let Colors=0; Colors < pog.colors.length; Colors++) { %>
          <option value="<%= Colors %>"><%= pog.colors[Colors] %></option>
          <%} %>
        </select>

        <input type="text" id="selectedColor" style="display: none;" class='info'></input>
        <p id="error"></p>
      </div>

      <!--Displays the amount produce of the current pog-->
      <div class="infobox">
        <p class="infoheader">Amount Produced </p>
        <p class="info" id="amount"><%= pog.amount %></p>
      </div>
      <!--Displays the serial number of the current pog-->
      <div class="infobox">
        <p class="infoheader">Serial Number </p>
        <p class="info" id="serial"><%= pog.serial %></p>
      </div>
      <!--Displays the tags of the current pog-->
      <div class="infobox">
        <p class="infoheader">Tags</p>
        <p class="info" id="tags"><%= pog.tags %></p>
      </div>

      <!--Displays the Rarity of the current pog-->
      <div class="infobox">
        <p class="infoheader">Pog Rarity</p>
        <p class="info" id="rarityBox"></p>
      </div>
      <!--Displays the lore of the current pog-->
      <div class="infobox">
        <p class='infoheader'>Pog Lore</p>
        <p class='info' id="lore"><%= pog.lore %></p>
      </div>
    </div>
  </div>

  <script>
    //Creating a variable called pog and setting it to the stringified pog.name
    var pog = JSON.parse(JSON.stringify("<%=pog.name%>")); // DO NOT TOUCH, WILL BREAK
    var pogImage = document.getElementById("Pogs");

    //A function that changes the pog image based on the currently selected pog
    function pogChange() {
      console.log(pogImage.value);
      if (pogImage.value == 0) {
        document.getElementById('error').innerText = ""
        let pogpng = document.getElementById("pogPNG")
        pogpng.src = `/pogs/${pog}.png`
      } else {
        let pogpng = document.getElementById("pogPNG")
        document.getElementById('error').innerText = ""
        pogpng.src = `/pogs/${pog}${pogImage.value}.png`
        pogpng.setAttribute('onerror', `this.src ='/pogs/${pog}.png'; unknown() ; this.onerror = ' ' `)
      }
      // Get the selected color from the dropdown menu
      var selectedColor = document.getElementById("Pogs").options[document.getElementById("Pogs").selectedIndex].text;
      // Update the text content of the "selectedColor" element with the selected color
      document.getElementById("selectedColor").value = selectedColor;
    }

    function unknown() {
      document.getElementById('error').innerText = "sorry this pog/color does not exist."
    }

    var pogData = <%-JSON.stringify(pog)%>; // Do not beautify; remove spaces, if they appear on this line, will cause errors

    // total pog amount
    var totalPog = 1856.5

    //getting the pog percentage out of the total amount of pogs
    var pogPercent = pogData.amount / totalPog * 100
    pogPercent = pogPercent.toFixed(2)

    //setting rarities
    if (pogPercent >= 10) {
      document.getElementById('rarityBox').innerText = 'Common'
    } else if (pogPercent < 10 && pogPercent >= 3) {
      document.getElementById('rarityBox').innerText = 'Uncommon'
    } else if (pogPercent < 3 && pogPercent >= 1) {
      document.getElementById('rarityBox').innerText = 'Rare'
    } else if (pogPercent < 1 && pogPercent > 0.05) {
      document.getElementById('rarityBox').innerText = 'Epic'
    } else if (pogPercent <= 0.05) {
      document.getElementById('rarityBox').innerText = 'Legendary'
    } else {
      document.getElementById('rarityBox').innerText = 'N/A'
    }

    var originalData = {};

    // Define the blurListener function in the global scope
    var blurListener = function () {
      // Override the data of the currently selected dropdown menu segment
      var selectedColor = document.getElementById("selectedColor").value;
      var selectedIndex = document.getElementById("Pogs").selectedIndex;
      document.getElementById("Pogs").options[selectedIndex].text = selectedColor;
    };

    function Edit() {
      var infoElements = document.getElementsByClassName("info");
      for (var i = 0; i < infoElements.length; i++) {
        var element = infoElements[i];
        if (element.id === 'serial' || element.id === 'rarityBox' || element.id === 'selectedColor') {
          element.setAttribute("contentEditable", "false");
        } else {
          originalData[element.id] = element.textContent;
        }
      }

      // Store the original inner HTML of the dropdown menu
      var dropdownMenu = document.getElementById("Pogs");
      originalDropdownHTML = dropdownMenu.innerHTML;

      // Make the "selectedColor" element visible
      document.getElementById("selectedColor").style.display = "block";

      // Make the dropdown menu of colors editable

      // Add the blurListener to the "selectedColor" variable
      document.getElementById("selectedColor").addEventListener("blur", blurListener);

      document.getElementById("cancelButton").style.display = "inline";
      document.getElementById("editButton").innerHTML = "Save";
      document.getElementById("editButton").onclick = Save;
    }

    function Cancel() {
      var infoElements = document.getElementsByClassName("info");
      for (var i = 0; i < infoElements.length; i++) {
        infoElements[i].textContent = originalData[infoElements[i].id];
        infoElements[i].setAttribute("contentEditable", "false");
      }

      // Revert the changes made in the "Edit" function
      document.getElementById("selectedColor").removeEventListener("blur", blurListener);
      document.getElementById("selectedColor").style.display = "none";

      // Restore the original inner HTML of the dropdown menu
      var dropdownMenu = document.getElementById("Pogs");
      dropdownMenu.innerHTML = originalDropdownHTML;

      document.getElementById("cancelButton").style.display = "none";
      document.getElementById("editButton").innerHTML = "Edit";
      document.getElementById("editButton").onclick = Edit;
    }

    function Save() {
      console.log("U saved lel")
      // var infoElements = document.getElementsByClassName("info");
      // var newData = {};
      // for (var i = 0; i < infoElements.length; i++) {
      //   newData[infoElements[i].id] = infoElements[i].textContent;
      // }
      // fetch('/save', {
      //     method: 'POST',
      //     headers: {
      //       'Content-Type': 'application/json',
      //     },
      //     body: JSON.stringify(newData),
      //   })
      //   .then(response => response.json())
      //   .then(data => {
      //     console.log('Success:', data);
      //     document.getElementById("cancelButton").style.display = "none";
      //   })
      //   .catch((error) => {
      //     console.error('Error:', error);
      //   });
      // for (var i = 0; i < infoElements.length; i++) {
      //   infoElements[i].setAttribute("contenteditable", "false");
      // }
      // document.getElementById("editButton").innerHTML = "Edit";
      // document.getElementById("editButton").onclick = Edit;
    }
  </script>
</body>

</html>