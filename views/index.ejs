<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>OnlyPogs</title>
</head>
<script>

    // Takes the rows passed from main.js and stringify's it in order for it to work
    var data = <%- JSON.stringify(rows) %>;

    // console.log(data)
    // Define a variable to store the current sort order
    var currentSortOrder = 'asc';

    // Define a function to toggle the sort order
    function toggleSortOrder() {
        // currentSortOrder = currentSortOrder === 'asc' ? 'desc' : 'asc';
        // Check if the current sort order is 'asc' and reset it if necessary
        if (currentSortOrder === 'asc') {
            currentSortOrder = 'desc';
        } else {
            currentSortOrder = 'asc';
        }

    }

    // Define a function to sort the table by the "Name" column
    function sortByName() {
        toggleSortOrder();

        data.sort((a, b) => {
            const comparison = a.name.localeCompare(b.name);
            return currentSortOrder === 'asc' ? comparison : -comparison;
        });

        // Call a function to update the table rows
        updateTable();
    }
    function sortBySerial() {
        toggleSortOrder();

        data.sort((a, b) => {
            const comparison = a.serial.localeCompare(b.serial);
            return currentSortOrder === 'asc' ? comparison : -comparison;
        });

        // Call a function to update the table rows
        updateTable();
    }
    function sortByAmount() {
        toggleSortOrder();

        data.sort((a, b) => {
            const amountA = String(a.amount); // Convert to string for string-based comparison
            const amountB = String(b.amount);

            const comparison = amountA.localeCompare(amountB);
            return currentSortOrder === 'asc' ? comparison : -comparison;
        });

        // Call a function to update the table rows
        updateTable();
    }

    function sortByTags() {
        toggleSortOrder();

        data.sort((a, b) => {
            const comparison = a.tags.localeCompare(b.tags);
            return currentSortOrder === 'asc' ? comparison : -comparison;
        });

        // Call a function to update the table rows
        updateTable();
    }

    // Define a function to update the table rows based on the sorted data
    function updateTable() {
        const tableBody = document.getElementById('table-body');
        const tableHead = document.getElementById('tableHead');
        tableBody.innerHTML = '';
        data.forEach((row) => {

            const tr = document.createElement('tr');
            const tdName = document.createElement('a');
            const tdSerial = document.createElement('td');
            const tdAmount = document.createElement('td');
            const tdTags = document.createElement('td');

            tdName.href = row.url; // Set the href attribute to the URL


            tdName.textContent = row.name;
            tdName.innerHTML = row.name;
            tdSerial.textContent = row.serial;
            tdAmount.textContent = row.amount;
            tdTags.textContent = row.tags;

            tr.appendChild(tdName);
            tr.appendChild(tdSerial);
            tr.appendChild(tdAmount);
            tr.appendChild(tdTags);

            tableBody.appendChild(tr);
        });
    }
</script>

<body>

    <!-- each header has it's own onclick function with the arguement to each collumn to sort to  -->
    <table id="table">
        <thead>
            <tr>
                <th id="name" onclick="sortByName()">Name --</th>
                <th id="serial" onclick="sortBySerial()">Serial Number --</th>
                <th id="amount" onclick="sortByAmount()">Amount Produced --</th>
                <th id="tags" onclick="sortByTags()">Tags --</th>
            </tr>
        </thead>
        <tbody id="table-body">
            <% for(let i=0; i < rows.length; i++) {%>
                <tr>
                    <td>
                        <a href="<%- rows[i].url %>"><%- rows[i].name %></a>
                    </td>
                    <td>
                        <%- rows[i].serial %>
                    </td>
                    <td>
                        <%- rows[i].amount %>
                    </td>
                    <td>
                        <%- rows[i].tags %>
                    </td>
                </tr>
                <% } %>
        </tbody>
    </table>

</body>

</html>